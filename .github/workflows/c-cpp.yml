name: ARM Workflow

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [arm64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build and test
      run: |
        echo "Running on ${{ matrix.architecture }}"
    - name: build
      run: |
        sudo apt -y install build-essential cmake libboost-system-dev libboost-program-options-dev libssl-dev default-libmysqlclient-dev -yqq
        mkdir build
        cd build/
        cmake ..
        make
        ctest
        sudo make install
        mkdir trojan-arm
        sudo cp /usr/local/bin/trojan ./trojan-arm/trojan
        sudo cp /usr/local/etc/trojan/config.json ./trojan-arm/config.json
        sudo cp -r /usr/local/share/doc ./trojan-arm/
        sudo cp /usr/lib/systemd/system/trojan.service ./trojan-arm/trojan.service
        tar -czf trojan-arm.tar.gz trojan-arm
        ls
        echo '====='
        ls trojan-arm
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0
        release_name: Release v1.0.0
        body: |
          Description of the release
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/trojan-arm.tar.gz
        asset_name: trojan-arm.tar.gz
        asset_content_type: application/gzip